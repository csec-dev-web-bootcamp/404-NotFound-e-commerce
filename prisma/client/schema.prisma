// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "./client"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Product {
  id              String  @id @default(uuid())
  name            String
  price           Int
  discountedPrice Int
  rateReview      Float
  rateReviewers   Int
  category        String
  details         String? @db.Text
  images          Json
}

// model User {
//   id       String   @id @default(uuid())
//   name     String
//   email    String   @unique
//   password String
//   role     UserRole @default(CUSTOMER)
// }

enum UserRole {
  ADMIN    @map("admin")
  CUSTOMER @map("customer")
}

// datasource db {
//   provider = "mysql"
//   url      = env("DATABASE_URL")
// }

// generator client {
//   provider = "prisma-client-js"
// }

model User {
  id         Int        @id @default(autoincrement())
  name       String
  password   String
  email      String     @unique
  created_at DateTime   @default(now())
  Orders     Orders[]
  Ratings    Ratings[]
  Wishlist   Wishlist[]
  role       UserRole   @default(CUSTOMER)
}

model Categories {
  category_id   Int        @id @default(autoincrement())
  category_name String     @unique
  Products      Products[]
}

model Products {
  product_id     Int          @id @default(autoincrement())
  category_id    Int?
  product_name   String
  description    String?
  price          Decimal      @default(0.0)
  stock_quantity Int
  created_at     DateTime     @default(now())
  Category       Categories?  @relation(fields: [category_id], references: [category_id])
  OrderItems     OrderItems[]
  Wishlist       Wishlist[]
  Ratings        Ratings[]
}

model OrderItems {
  order_item_id Int      @id @default(autoincrement())
  order_id      Int
  product_id    Int
  quantity      Int
  price         Decimal  @default(0.0)
  Order         Orders   @relation(fields: [order_id], references: [order_id])
  Product       Products @relation(fields: [product_id], references: [product_id])
}

model Wishlist {
  wishlist_id Int      @id @default(autoincrement())
  id          Int
  product_id  Int
  added_date  DateTime @default(now())
  User        User     @relation(fields: [id], references: [id])
  Product     Products @relation(fields: [product_id], references: [product_id])
}

model Ratings {
  rating_id   Int      @id @default(autoincrement())
  id          Int
  product_id  Int
  rating      Int
  review      String?
  rating_date DateTime @default(now())
  User        User     @relation(fields: [id], references: [id])
  Product     Products @relation(fields: [product_id], references: [product_id])
}

model Admins {
  admin_id   Int      @id @default(autoincrement())
  username   String   @unique
  password   String
  email      String   @unique
  created_at DateTime @default(now())
}

enum OrderStatus {
  Pending
  Accepted
  Rejected
}

model Orders {
  order_id     Int          @id @default(autoincrement())
  id           Int
  order_status OrderStatus  @default(Pending)
  order_date   DateTime     @default(now())
  User         User         @relation(fields: [id], references: [id])
  OrderItems   OrderItems[]
}
